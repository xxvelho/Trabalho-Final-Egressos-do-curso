package InterfaceGrafica.coord.menu.EditandoEgresso;

import Adicionais.Trabalho;
import ComboBox.TrabalhoComboBoxModel;
import InterfaceGrafica.coord.Chaves;
import Pessoa.Adm;
import Pessoa.Coord;
import Pessoa.Curso;
import Pessoa.ExAlunos;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Hashtable;
import javax.swing.JOptionPane;

public class jfExcluindoTrabalho extends javax.swing.JFrame {
    private Adm admRei;
    private Chaves chaves;

    //salvando arquivo
    public static void gravarArquivo(Adm adm)
            throws IOException {
        ObjectOutputStream arquivo =
                new ObjectOutputStream(
                        new FileOutputStream("backup.dat")
                );

        arquivo.writeObject(adm);
        arquivo.close();
    }
    //salvar login
    public static void salvarLogado(Chaves keys)
            throws IOException {
        ObjectOutputStream arquivo =
                new ObjectOutputStream(
                        new FileOutputStream("logado.dat")
                );

        arquivo.writeObject(keys);
        arquivo.close();
    }
    //recuperando arquivo
    public static Adm lerArquivo()
            throws IOException, ClassNotFoundException {
        Adm novo;

        ObjectInputStream arquivo =
                new ObjectInputStream(
                        new FileInputStream("backup.dat")
                );
        
        novo = (Adm) arquivo.readObject();
        arquivo.close();
        return novo;
    }
    //recuperar chaves
    public static Chaves recuperarLogado()
            throws IOException, ClassNotFoundException {
        Chaves novo;

        ObjectInputStream arquivo =
                new ObjectInputStream(
                        new FileInputStream("logado.dat")
                );
        
        novo = (Chaves) arquivo.readObject();
        arquivo.close();
        return novo;
    }
    
    
    private TrabalhoComboBoxModel trabalhoComboBoxModel;

    
    
    Trabalho trabalhoSelecionado;
    
    private ArrayList<Trabalho> trabalhosList;
    
    /**
     * Creates new form jfExcluindoTrabalho
     */
    public jfExcluindoTrabalho() {
        initComponents();
        
        trabalhoComboBoxModel = new TrabalhoComboBoxModel();
        
        //resgatando informacoes do arquivo
        try {
            admRei = lerArquivo();
            chaves = recuperarLogado();
        }catch(ClassNotFoundException e){
            System.out.println("Erro ;-;");
        }catch(IOException e){
            System.out.println("Erro ao tentar ler arquivo");
        }
        
        //pegando dados do adm
        Hashtable<String, Coord> auxListCoord = admRei.getCoordenadores();
        Coord coordAtual = auxListCoord.get(chaves.getLoginCoordenador());
        Curso curso = coordAtual.getCurso();
        Hashtable<String, ExAlunos> auxListEgressos = curso.getEgressos();
        
        //pegando dados do egresso;
        ExAlunos egresso = (ExAlunos) auxListEgressos.get(chaves.getCpfEgresso());
        trabalhosList = egresso.getTrabalhos();
        
        //colocando itens no comboBox
        for (Trabalho trabalho : trabalhosList) {
            trabalhoComboBoxModel.addTrabalho(trabalho);
        }
        this.cbTrabalhos.setModel(trabalhoComboBoxModel);
        
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbTrabalhos = new javax.swing.JComboBox<>();
        bntExcluir = new javax.swing.JButton();
        bntVoltar = new javax.swing.JButton();
        bntSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Selecione Trabalho");

        cbTrabalhos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbTrabalhos.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbTrabalhosPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cbTrabalhos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTrabalhosActionPerformed(evt);
            }
        });

        bntExcluir.setText("Excluir");
        bntExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntExcluirActionPerformed(evt);
            }
        });

        bntVoltar.setText("Voltar");
        bntVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntVoltarActionPerformed(evt);
            }
        });

        bntSalvar.setText("Salvar");
        bntSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(bntVoltar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bntSalvar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbTrabalhos, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(99, 99, 99)
                                        .addComponent(bntExcluir)))))
                        .addGap(0, 86, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(78, 78, 78)
                .addComponent(cbTrabalhos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bntExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntVoltar)
                    .addComponent(bntSalvar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bntVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntVoltarActionPerformed
        // TODO add your handling code here:
        jfTelaDoisEditandoEgresso novo = new jfTelaDoisEditandoEgresso();
        dispose();
        novo.setVisible(true);
    }//GEN-LAST:event_bntVoltarActionPerformed

    private void bntSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSalvarActionPerformed
        // TODO add your handling code here:
        //pegando dados do adm
        Hashtable<String, Coord> auxListCoord = admRei.getCoordenadores();
        Coord coordAtual = auxListCoord.get(chaves.getLoginCoordenador());
        Curso curso = coordAtual.getCurso();
        Hashtable<String, ExAlunos> auxListEgressos = curso.getEgressos();
        
        //pegando dados do egresso;
        ExAlunos egresso = (ExAlunos) auxListEgressos.get(chaves.getCpfEgresso());
        //atalizando dados
        egresso.setTrabalhos(trabalhosList);
        auxListEgressos.put(chaves.getCpfEgresso(), egresso);
        curso.setEgressos(auxListEgressos);
        coordAtual.setCurso(curso);
        auxListCoord.put(chaves.getLoginCoordenador(), coordAtual);
        
        admRei.setCoordenadores(auxListCoord);
        //salvando arquivos
        try{
            gravarArquivo(admRei);
            jfTelaDoisEditandoEgresso novo = new jfTelaDoisEditandoEgresso();
            dispose();
            novo.setVisible(true);
        }catch(IOException e){
            JOptionPane.showMessageDialog(null, "Erro ao salvar");
        }
        
        
    }//GEN-LAST:event_bntSalvarActionPerformed

    private void cbTrabalhosPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbTrabalhosPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if(this.cbTrabalhos.getSelectedItem() instanceof Trabalho){
            this.trabalhoSelecionado = (Trabalho) this.cbTrabalhos.getSelectedItem();
        }else{
            JOptionPane.showMessageDialog(null, "Selecione um Tabalho");
        }
    }//GEN-LAST:event_cbTrabalhosPopupMenuWillBecomeInvisible

    private void bntExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntExcluirActionPerformed
        // TODO add your handling code here:
        if(this.trabalhoSelecionado instanceof Trabalho){
            trabalhosList.remove(this.trabalhoSelecionado);
            //atualizando comboBox
            trabalhoComboBoxModel.reset();
            for(Trabalho trabalho : trabalhosList){
                trabalhoComboBoxModel.addTrabalho(trabalho);
            }
            this.cbTrabalhos.setModel(trabalhoComboBoxModel);
            JOptionPane.showMessageDialog(null, "Trabalho Removido");
        }else{
            JOptionPane.showMessageDialog(null, "Selecione um Tabalho");
        }
    }//GEN-LAST:event_bntExcluirActionPerformed

    private void cbTrabalhosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTrabalhosActionPerformed
        // TODO add your handling code here:
        if(this.cbTrabalhos.getSelectedItem() instanceof Trabalho){
            this.trabalhoSelecionado = (Trabalho) this.cbTrabalhos.getSelectedItem();
        }else{
            JOptionPane.showMessageDialog(null, "Selecione um Tabalho");
        }
    }//GEN-LAST:event_cbTrabalhosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jfExcluindoTrabalho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jfExcluindoTrabalho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jfExcluindoTrabalho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jfExcluindoTrabalho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfExcluindoTrabalho().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntExcluir;
    private javax.swing.JButton bntSalvar;
    private javax.swing.JButton bntVoltar;
    private javax.swing.JComboBox<String> cbTrabalhos;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
